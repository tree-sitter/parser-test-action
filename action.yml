name: Tree-sitter parser tests
description: Test a tree-sitter parser

branding:
  color: green
  icon: check-square

inputs:
  generate:
    description: Verify the generated parser
    default: "true"
  test-parser:
    description: Test the parser
    default: "true"
  test-parser-cmd:
    description: Command that tests the parser
    default: tree-sitter test
  test-rust:
    description: Test the Rust bindings
    default: "false"
  rust-version:
    description: Rust version
    default: stable
  test-node:
    description: Test the Node bindings
    default: "false"
  node-version:
    description: Node.js version
    default: latest
  test-python:
    description: Test the Python bindings
    default: "false"
  python-version:
    description: Python version
    default: "3.12"
  test-go:
    description: Test the Go bindings
    default: "false"
  go-version:
    description: Go version
    default: "1.22"
  test-swift:
    description: Test the Swift bindings
    default: "false"
  swift-version:
    description: Swift version
    default: "5.10"

runs:
  using: composite
  steps:
    - name: Verify generated parser
      if: inputs.generate == 'true'
      shell: sh
      run: |-
        JQ_SCRIPT='.dependencies | del(."node-addon-api", ."node-gyp-build") | length > 0'
        if jq -e "$JQ_SCRIPT" package.json >/dev/null; then
          npm ci --omit dev --omit peer --omit optional
        fi
        tree-sitter generate
        [[ ! -d node_modules ]] || rm -rf node_modules
        git diff --exit-code -- src/parser.c
    - name: Run parser tests
      if: inputs.test-parser == 'true'
      shell: sh
      run: ${{inputs.test-parser-cmd}}
    - name: Run Rust tests
      uses: tree-sitter/parser-test-action/rust@v2
      if: inputs.test-rust == 'true'
      with:
        rust-version: ${{inputs.rust-version}}
    - name: Run Node tests
      uses: tree-sitter/parser-test-action/node@v2
      if: inputs.test-node == 'true'
      with:
        node-version: ${{inputs.node-version}}
    - name: Run Python tests
      uses: tree-sitter/parser-test-action/python@v2
      if: inputs.test-python == 'true'
      with:
        python-version: ${{inputs.python-version}}
    - name: Run Go tests
      uses: tree-sitter/parser-test-action/go@v2
      if: inputs.test-go == 'true'
    - name: Run Swift tests
      uses: tree-sitter/parser-test-action/swift@v2
      if: inputs.test-swift == 'true' && runner.os != 'Windows'
